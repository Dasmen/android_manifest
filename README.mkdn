<img src="https://raw.githubusercontent.com/halogenOS/android_manifest/XOS-7.0/halogenos-logo.png">

___________________________________________________________________________________


### Getting Started with XOS

#### __0. Preliminary Knowledge__

Before beginning this entire process, please ensure you have sufficient storage space. To carry out a single device build an excess of over 30 GB will be required. If building for more than one device, this amount of required storage can exponentially increase. For speedy builds it is highly recommended that you store the sources in a fast storage medium such as Solid State Drives (SSDs), with modern computers it often turns out to be a greater bottleneck than the processor itself when compiling Android.

It should also be noted that in order to build Android from source successfully, you will require GNU Make, git and the Open Java Development Kit as as well as a few build and compiler centric packages, this will vary from distribution to distribution so it is recommended that you 'Google' the required packages for compiling Android for your distribution.

#### __1. Getting Started__

To get started with XOS, you should first become familliar with the basics of the utilities named [git](http://rogerdudler.github.io/git-guide/) and [repo](https://source.android.com/source/using-repo.html), if using a development oriented distro or are already an actual developer working with source based Android ROMs or other similar projects you should more likely than not already have these obtained, if not here's an idea of what one should do below.

__Installing repo__

```bash
curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
chmod a+x ~/bin/repo
```

__Installing git__

Git would more likely than not probably be already installed in your distribution, if it is not then you should try one of the following terminal commands depending on your distribution:

```bash
Ubuntu, Debian (apt): apt-get install git
OpenSUSE: zypper install git
Fedora: yum install git-all
Gentoo: emerge --ask --verbose dev-vcs/git
Archlinux: pacman -S git
```

The derivatives of these common distributions should also have the git package available, if you believe your distribution does not offer git in the default package repositories then you may consider [compiling and installing git from source](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git#Installing-from-Source).

#### __2. Initiating Repository and Acquiring Sources__

First you should clone this very repository using git, once done change directory to your local copy of this repository as such:

```bash
git clone https://github.com/halogenOS/android_manifest.git
cd android_manifest
```

You should then proceed to initialize your local fetched repository using repo with the XOS trees, to do this please use a command which looks like this:

```bash
repo init -u https://github.com/halogenOS/android_manifest.git -b XOS-7.0
```

You should then synchronize the repository with repo, which will fetch all of the components of XOS from source, you should be warned that this is a procedure which download multiple GigaBytes of data, it may take hours to complete. Be prepared with something fun to do as will be waiting for a while.

```bash
repo sync
```

Or if you feel like doing it just a bit faster then you can also do this instead, it won't hurt, we promise:

```bash
repo sync build
. build/envsetup.sh
reposync fast
```

#### __3. Building__

__Note: The current changelog for XOS is here: https://github.com/halogenOS/android_vendor_xos/blob/XOS-7.0/Changelog.md__

First, in order to build XOS you should execute the envsetup.sh script in your terminal/shell, this will set up and import all of the available device configurations for the ROM as well as giving you some fancy "macro" commands for your build enviroment. As such, in order to do this, run the command:

```bash
source build/envsetup.sh
```

Now, you should select and configure the build target by using the *lunch* command. Type 'lunch', and a list of the available devices and build targets will be offered, give it a whirl, it won't bite.

Additionally here's a list of build types for your target device that you will likely encounter while running 'lunch'.

| Build type	| Use |
|:----------|:----------|
| user	| The flavour usually for building final releases. |
| userdebug |	Same as "user" but with adb enabled, will install debug modules and enables debuggability in the build properties. |
| eng	| Engineering build, enables shell root access, debuggability, adb, install engineering modules and is fully JIT enabled |

At this point you should be able to build the ROM freely, all that's left to do is enter...

```bash
mka
```

in your terminal, the master chef that is 'Mr Compiler' will do the cooking of the ROM for you, this will take another while and depend on your storage speed and the capability of your CPU.

Once done you should find a cute flashable zip either in your directory or within "out/target/product/", this is your creation, you compiled it, she's yours, your own adorable pet... just make sure to treat her very nicely :).

#### __4. Flashing__
If you do not know how to flash an Android ROM then you probably shouldn't have followed this guide in the first place, or have a case of amnesia, but in the case that you do need a briefing then here's a short guide on flashing XOS: https://goo.gl/BB53SU

##### _For those who know what they are doing: XOS is under development. Please do not just do a "sync&build"._
